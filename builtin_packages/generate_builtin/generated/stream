function listenerCount(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function init(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function EventEmitter(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function on(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function once(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function _uint8ArrayToBuffer(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function _isUint8Array(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function Stream(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function finished(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function pipeline(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function PassThrough(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function Transform(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function Duplex(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function Writable(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
function Readable(arg1, arg2, arg3, arg4, arg5, arg6) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6;
}
module.exports = {
Readable,
Writable,
Duplex,
Transform,
PassThrough,
pipeline,
finished,
Stream,
_isUint8Array,
_uint8ArrayToBuffer,
once,
on,
EventEmitter,
init,
listenerCount
}
